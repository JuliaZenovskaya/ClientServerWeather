{"ast":null,"code":"export function addCity(city) {\n  return {\n    type: 'ADD_CITY',\n    payload: {\n      id,\n      name\n    }\n  };\n}\nexport function deleteCity(id) {\n  return {\n    type: 'DELETE_CITY',\n    payload: id\n  };\n}\nexport function getCity(cities) {\n  return {\n    type: 'GET_CITY',\n    payload: cities\n  };\n}\nexport function fetchAddedCitiesSuccess(response, city) {\n  return {\n    type: 'FETCH_ADDED_CITY_SUCCESS',\n    payload: {\n      response,\n      city\n    }\n  };\n}\nexport function fetchAddedCitiesError(error, id) {\n  return {\n    type: 'FETCH_ADDED_CITY_ERROR',\n    payload: {\n      error,\n      id\n    }\n  };\n}\nexport function getWeatherByCity(id, name) {\n  console.log(id);\n  console.log(name);\n  return function (dispatch) {\n    fetch(\"/weather?city=\" + name).then(response => {\n      response.json().then(json => {\n        if (response.ok) {\n          dispatch(fetchAddedCitiesSuccess(json, name));\n          console.log(json);\n        } else {\n          let error = json.message;\n          dispatch(fetchAddedCitiesError(error, id));\n        }\n      });\n    }, error => dispatch(fetchAddedCitiesError(error, id)));\n  };\n}","map":{"version":3,"sources":["C:/Users/Jully/ClientServerWeather/client/src/actions/сitiesAction.js"],"names":["addCity","city","type","payload","id","name","deleteCity","getCity","cities","fetchAddedCitiesSuccess","response","fetchAddedCitiesError","error","getWeatherByCity","console","log","dispatch","fetch","then","json","ok","message"],"mappings":"AAEA,OAAO,SAASA,OAAT,CAAiBC,IAAjB,EAAuB;AAC5B,SAAO;AACLC,IAAAA,IAAI,EAAE,UADD;AAELC,IAAAA,OAAO,EAAE;AACPC,MAAAA,EADO;AAEPC,MAAAA;AAFO;AAFJ,GAAP;AAOD;AAED,OAAO,SAASC,UAAT,CAAoBF,EAApB,EAAwB;AAC7B,SAAO;AACLF,IAAAA,IAAI,EAAE,aADD;AAELC,IAAAA,OAAO,EAAEC;AAFJ,GAAP;AAID;AAED,OAAO,SAASG,OAAT,CAAiBC,MAAjB,EAAyB;AAC9B,SAAO;AACLN,IAAAA,IAAI,EAAE,UADD;AAELC,IAAAA,OAAO,EAAEK;AAFJ,GAAP;AAID;AAED,OAAO,SAASC,uBAAT,CAAiCC,QAAjC,EAA2CT,IAA3C,EAAiD;AACtD,SAAO;AACLC,IAAAA,IAAI,EAAE,0BADD;AAELC,IAAAA,OAAO,EAAE;AACPO,MAAAA,QADO;AAEPT,MAAAA;AAFO;AAFJ,GAAP;AAOD;AAED,OAAO,SAASU,qBAAT,CAA+BC,KAA/B,EAAsCR,EAAtC,EAA0C;AAC/C,SAAO;AACLF,IAAAA,IAAI,EAAE,wBADD;AAELC,IAAAA,OAAO,EAAE;AACPS,MAAAA,KADO;AAEPR,MAAAA;AAFO;AAFJ,GAAP;AAOD;AAED,OAAO,SAASS,gBAAT,CAA0BT,EAA1B,EAA8BC,IAA9B,EAAoC;AACzCS,EAAAA,OAAO,CAACC,GAAR,CAAYX,EAAZ;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACD,SAAO,UAASW,QAAT,EAAmB;AACvBC,IAAAA,KAAK,CAAC,mBAAmBZ,IAApB,CAAL,CACGa,IADH,CACQR,QAAQ,IAAI;AAChBA,MAAAA,QAAQ,CAACS,IAAT,GACGD,IADH,CACQC,IAAI,IAAI;AACZ,YAAIT,QAAQ,CAACU,EAAb,EAAiB;AACfJ,UAAAA,QAAQ,CAACP,uBAAuB,CAACU,IAAD,EAAOd,IAAP,CAAxB,CAAR;AACAS,UAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACD,SAHD,MAGO;AACL,cAAIP,KAAK,GAAGO,IAAI,CAACE,OAAjB;AACAL,UAAAA,QAAQ,CAACL,qBAAqB,CAACC,KAAD,EAAQR,EAAR,CAAtB,CAAR;AACD;AACF,OATH;AAUD,KAZH,EAaEQ,KAAK,IAAII,QAAQ,CAACL,qBAAqB,CAACC,KAAD,EAAQR,EAAR,CAAtB,CAbnB;AAcD,GAfF;AAgBA","sourcesContent":["\r\n\r\nexport function addCity(city) {\r\n  return {\r\n    type: 'ADD_CITY',\r\n    payload: {\r\n      id,\r\n      name\r\n    }\r\n  };\r\n}\r\n\r\nexport function deleteCity(id) {\r\n  return {\r\n    type: 'DELETE_CITY',\r\n    payload: id\r\n  };\r\n}\r\n\r\nexport function getCity(cities) {\r\n  return {\r\n    type: 'GET_CITY',\r\n    payload: cities\r\n  }\r\n}\r\n\r\nexport function fetchAddedCitiesSuccess(response, city) {\r\n  return {\r\n    type: 'FETCH_ADDED_CITY_SUCCESS',\r\n    payload: {\r\n      response,\r\n      city\r\n    }\r\n  }\r\n}\r\n\r\nexport function fetchAddedCitiesError(error, id) {\r\n  return {\r\n    type: 'FETCH_ADDED_CITY_ERROR',\r\n    payload: {\r\n      error,\r\n      id\r\n    }\r\n  }\r\n}\r\n\r\nexport function getWeatherByCity(id, name) {\r\n  console.log(id);\r\n  console.log(name);\r\n return function(dispatch) {\r\n    fetch(`/weather?city=` + name)\r\n      .then(response => {\r\n        response.json()\r\n          .then(json => {\r\n            if (response.ok) {\r\n              dispatch(fetchAddedCitiesSuccess(json, name));\r\n              console.log(json);\r\n            } else {\r\n              let error = json.message;\r\n              dispatch(fetchAddedCitiesError(error, id));\r\n            }\r\n          });\r\n      },\r\n      error => dispatch(fetchAddedCitiesError(error, id)))\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}