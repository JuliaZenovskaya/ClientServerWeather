{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jully\\\\ClientServerWeather\\\\client\\\\src\\\\components\\\\Cities\\\\Cities.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Weather from '../Weather/Weather';\nimport axios from 'axios';\nimport { addCity, deleteCity, getWeatherByCity } from '../../actions/сitiesAction';\nimport getCitiesFromStorage from '../index';\nimport './Cities.css';\n\nclass Cities extends React.Component {\n  componentDidMount() {\n    this.props.cities = getCitiesFromStorage();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fav_cities\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"\\u0418\\u0437\\u0431\\u0440\\u0430\\u043D\\u043D\\u043E\\u0435\"), React.createElement(\"form\", {\n      onSubmit: e => this.addNewCity(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"city_input\",\n      type: \"text\",\n      name: \"city\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"city_button\",\n      type: \"submit\",\n      value: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }))), this.props.error && React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Error: \", this.props.error), React.createElement(\"div\", {\n      className: \"weather\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, [...this.props.cities.entries()].map(entry => {\n      return React.createElement(Weather, {\n        key: entry[0],\n        getWeather: () => this.props.getWeatherByCity(entry[0]),\n        onDelete: () => this.props.deleteCity(entry[0]),\n        weather: entry[1],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n    })));\n  }\n\n  addNewCity(e) {\n    e.preventDefault();\n    this.props.addCity(e.currentTarget.elements.city.value);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    cities: state.fav_cities.cities,\n    error: state.fav_cities.error\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addCity: name => {\n      dispatch(addCityStore(name));\n    },\n    deleteCity: id => {\n      dispatch(deleteCityStore(id));\n    },\n    getWeatherByCity: city => {\n      dispatch(getWeatherByCity(city));\n    }\n  };\n}\n\nconst addCityStore = name => {\n  return dispatch => {\n    axios.post('favourites', {\n      name\n    }).then(response => {\n      const city = {\n        id: response.data._id,\n        name: response.data.name\n      };\n      dispatch(addCity(city));\n    });\n  };\n};\n\nconst deleteCityStore = id => {\n  return dispatch => {\n    axios.delete('favourites/' + id).then(response => {\n      dispatch(deleteCity(id));\n    });\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities);","map":{"version":3,"sources":["C:/Users/Jully/ClientServerWeather/client/src/components/Cities/Cities.js"],"names":["React","connect","Weather","axios","addCity","deleteCity","getWeatherByCity","getCitiesFromStorage","Cities","Component","componentDidMount","props","cities","render","e","addNewCity","error","entries","map","entry","preventDefault","currentTarget","elements","city","value","mapStateToProps","state","fav_cities","mapDispatchToProps","dispatch","name","addCityStore","id","deleteCityStore","post","then","response","data","_id","delete"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Weather from '../Weather/Weather';\r\nimport axios from 'axios';\r\nimport { addCity, deleteCity, getWeatherByCity } from '../../actions/сitiesAction';\r\nimport getCitiesFromStorage from '../index';\r\nimport './Cities.css';\r\n\r\nclass Cities extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.cities = getCitiesFromStorage();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <div>\r\n        <div className=\"fav_cities\">Избранное</div>\r\n        <form onSubmit={(e) => this.addNewCity(e)}>\r\n          <input className=\"city_input\" type=\"text\" name=\"city\" required />\r\n          <input className=\"city_button\" type=\"submit\" value=\"Добавить\"/>\r\n        </form>\r\n      </div >\r\n        {this.props.error && <div className=\"error\">Error: {this.props.error}</div>}\r\n        <div  className=\"weather\">\r\n          {\r\n            [...this.props.cities.entries()].map((entry) => {\r\n              return (\r\n                <Weather\r\n                  key={entry[0]}\r\n                  getWeather={() => this.props.getWeatherByCity(entry[0])}\r\n                  onDelete={() => this.props.deleteCity(entry[0])}\r\n                  weather={entry[1]}/>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  addNewCity(e) {\r\n    e.preventDefault();\r\n    this.props.addCity(e.currentTarget.elements.city.value);\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    cities: state.fav_cities.cities,\r\n    error: state.fav_cities.error\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addCity: (name) => {\r\n      dispatch(addCityStore(name));\r\n    },\r\n\r\n    deleteCity: (id) => {\r\n      dispatch(deleteCityStore(id));\r\n    },\r\n\r\n    getWeatherByCity: (city) => {\r\n      dispatch(getWeatherByCity(city));\r\n    }\r\n  };\r\n}\r\n\r\nconst addCityStore = name => {\r\n  return dispatch => {\r\n    axios\r\n      .post('favourites', { name })\r\n      .then(response => {\r\n        const city = {\r\n          id: response.data._id,\r\n          name: response.data.name\r\n        };\r\n      dispatch(addCity(city));\r\n    });\r\n  };\r\n};\r\n\r\nconst deleteCityStore = id => {\r\n  return dispatch => {\r\n    axios\r\n      .delete('favourites/' + id)\r\n      .then(response => {\r\n        dispatch(deleteCity(id))\r\n      })\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities);\r\n"]},"metadata":{},"sourceType":"module"}