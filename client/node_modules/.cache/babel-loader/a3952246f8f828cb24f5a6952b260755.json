{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Jully\\\\ClientServerWeather\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { getCitiesFromStore } from \"../index\";\nexport default function citiesReducer(currentState = {\n  cities: getCitiesFromStore()\n}, action) {\n  getCitiesFromStore().then(res => console.log(res));\n\n  let state = _objectSpread({}, currentState, {\n    error: false,\n    cities: new Map(currentState.cities)\n  });\n\n  switch (action.type) {\n    case 'ADD_CITY':\n      if (!state.cities.has(action.payload)) state.cities.set(action.payload);\n      break;\n\n    case 'DELETE_CITY':\n      state.cities.delete(action.payload);\n      break;\n\n    case 'FETCH_ADDED_CITY_SUCCESS':\n      state.cities.delete(action.payload.city);\n      state.cities.set(action.payload.response.name, action.payload.response);\n      break;\n\n    case 'FETCH_ADDED_CITY_ERROR':\n      state.error = action.payload.error;\n      state.cities.delete(action.payload.city);\n      break;\n\n    default:\n      break;\n  }\n\n  return state;\n}","map":{"version":3,"sources":["C:/Users/Jully/ClientServerWeather/client/src/reducers/сitiesReducer.js"],"names":["getCitiesFromStore","citiesReducer","currentState","cities","action","then","res","console","log","state","error","Map","type","has","payload","set","delete","city","response","name"],"mappings":";;;;;;AAAA,SAASA,kBAAT,QAAmC,UAAnC;AAEA,eAAe,SAASC,aAAT,CAAuBC,YAAY,GAAG;AAACC,EAAAA,MAAM,EAAEH,kBAAkB;AAA3B,CAAtC,EAAsEI,MAAtE,EAA8E;AAE7FJ,EAAAA,kBAAkB,GAAGK,IAArB,CAA0BC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAjC;;AACA,MAAIG,KAAK,qBACJP,YADI;AAEPQ,IAAAA,KAAK,EAAE,KAFA;AAGPP,IAAAA,MAAM,EAAE,IAAIQ,GAAJ,CAAQT,YAAY,CAACC,MAArB;AAHD,IAAT;;AAMA,UAAQC,MAAM,CAACQ,IAAf;AACE,SAAK,UAAL;AACE,UAAI,CAACH,KAAK,CAACN,MAAN,CAAaU,GAAb,CAAiBT,MAAM,CAACU,OAAxB,CAAL,EACEL,KAAK,CAACN,MAAN,CAAaY,GAAb,CAAiBX,MAAM,CAACU,OAAxB;AACF;;AACF,SAAK,aAAL;AACEL,MAAAA,KAAK,CAACN,MAAN,CAAaa,MAAb,CAAoBZ,MAAM,CAACU,OAA3B;AACA;;AACF,SAAK,0BAAL;AACEL,MAAAA,KAAK,CAACN,MAAN,CAAaa,MAAb,CAAoBZ,MAAM,CAACU,OAAP,CAAeG,IAAnC;AACAR,MAAAA,KAAK,CAACN,MAAN,CAAaY,GAAb,CAAiBX,MAAM,CAACU,OAAP,CAAeI,QAAf,CAAwBC,IAAzC,EAA+Cf,MAAM,CAACU,OAAP,CAAeI,QAA9D;AACA;;AACF,SAAK,wBAAL;AACET,MAAAA,KAAK,CAACC,KAAN,GAAcN,MAAM,CAACU,OAAP,CAAeJ,KAA7B;AACAD,MAAAA,KAAK,CAACN,MAAN,CAAaa,MAAb,CAAoBZ,MAAM,CAACU,OAAP,CAAeG,IAAnC;AACA;;AACF;AACE;AAjBJ;;AAoBA,SAAOR,KAAP;AACC","sourcesContent":["import { getCitiesFromStore } from \"../index\";\r\n\r\nexport default function citiesReducer(currentState = {cities: getCitiesFromStore()}, action) {\r\n\r\ngetCitiesFromStore().then(res => console.log(res))\r\nlet state = {\r\n  ...currentState,\r\n  error: false,\r\n  cities: new Map(currentState.cities)\r\n};\r\n\r\nswitch (action.type) {\r\n  case 'ADD_CITY':\r\n    if (!state.cities.has(action.payload))\r\n      state.cities.set(action.payload);\r\n    break;\r\n  case 'DELETE_CITY':\r\n    state.cities.delete(action.payload);\r\n    break;\r\n  case 'FETCH_ADDED_CITY_SUCCESS':\r\n    state.cities.delete(action.payload.city);\r\n    state.cities.set(action.payload.response.name, action.payload.response);\r\n    break;\r\n  case 'FETCH_ADDED_CITY_ERROR':\r\n    state.error = action.payload.error;\r\n    state.cities.delete(action.payload.city);\r\n    break;\r\n  default:\r\n    break;\r\n}\r\n\r\nreturn state;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}