{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jully\\\\ClientServerWeather\\\\client\\\\src\\\\components\\\\Cities\\\\Cities.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Weather from '../Weather/Weather';\nimport axios from 'axios';\nimport { getCity, addCity, deleteCity, getWeatherByCity, someError } from '../../actions/сitiesAction';\nimport getCitiesFromStorage from '../../index';\nimport './Cities.css';\n\nclass Cities extends React.Component {\n  componentDidMount() {\n    this.props.getCity();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fav_cities\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"\\u0418\\u0437\\u0431\\u0440\\u0430\\u043D\\u043D\\u043E\\u0435\"), React.createElement(\"form\", {\n      onSubmit: e => this.addNewCity(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"city_input\",\n      type: \"text\",\n      name: \"city\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"city_button\",\n      type: \"submit\",\n      value: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }))), this.props.error && React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Error: \", this.props.error), React.createElement(\"div\", {\n      className: \"weather\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, [...this.props.cities.entries()].map(entry => {\n      return React.createElement(Weather, {\n        weather: entry[1].weather,\n        key: entry[1].id,\n        getWeather: () => this.props.getWeatherByCity(entry[1].id, entry[1].name),\n        onDelete: () => this.props.deleteCity(entry[1].id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n    })));\n  }\n\n  addNewCity(e) {\n    e.preventDefault();\n    this.props.addCity(e.currentTarget.elements.city.value);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    cities: state.fav_cities.cities,\n    error: state.fav_cities.error\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getCity: () => {\n      dispatch(getCities());\n    },\n    addCity: name => {\n      dispatch(addCityStore(name));\n    },\n    deleteCity: id => {\n      dispatch(deleteCityStore(id));\n    },\n    getWeatherByCity: (id, name) => {\n      dispatch(getWeatherByCity(id, name));\n    },\n    someError: error => {\n      dispatch(someError(error));\n    }\n  };\n}\n\nconst addCityStore = name => {\n  return dispatch => {\n    axios.post('favourites', {\n      name\n    }).then(response => {\n      console.log(response.data.newCity);\n      dispatch(addCity(response.data.newCity._id, response.data.newCity.name));\n    });\n  };\n};\n\nconst deleteCityStore = id => {\n  return dispatch => {\n    axios.delete('favourites/' + id).then(response => {\n      dispatch(deleteCity(id));\n    }).catch(error => {\n      someError(\"Cannot delete city\");\n    });\n  };\n};\n\nconst getCities = () => {\n  return dispatch => {\n    axios.get('favourites').then(response => {\n      const cities = response.data.map(city => ({\n        id: city._id,\n        name: city.name\n      }));\n      dispatch(getCity(cities));\n    }).catch(error => {\n      someError(error);\n    });\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities);","map":{"version":3,"sources":["C:/Users/Jully/ClientServerWeather/client/src/components/Cities/Cities.js"],"names":["React","connect","Weather","axios","getCity","addCity","deleteCity","getWeatherByCity","someError","getCitiesFromStorage","Cities","Component","componentDidMount","props","render","e","addNewCity","error","cities","entries","map","entry","weather","id","name","preventDefault","currentTarget","elements","city","value","mapStateToProps","state","fav_cities","mapDispatchToProps","dispatch","getCities","addCityStore","deleteCityStore","post","then","response","console","log","data","newCity","_id","delete","catch","get"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,UAA3B,EAAuCC,gBAAvC,EAAyDC,SAAzD,QAA0E,4BAA1E;AACA,OAAOC,oBAAP,MAAiC,aAAjC;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAN,SAAqBV,KAAK,CAACW,SAA3B,CAAqC;AAErCC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWT,OAAX;AACD;;AAEDU,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEADF,EAEE;AAAM,MAAA,QAAQ,EAAGC,CAAD,IAAO,KAAKC,UAAL,CAAgBD,CAAhB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,IAAI,EAAC,MAAnC;AAA0C,MAAA,IAAI,EAAC,MAA/C;AAAsD,MAAA,QAAQ,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAA+B,MAAA,IAAI,EAAC,QAApC;AAA6C,MAAA,KAAK,EAAC,kDAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,CADF,EAQG,KAAKF,KAAL,CAAWI,KAAX,IAAoB;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA+B,KAAKJ,KAAL,CAAWI,KAA1C,CARvB,EASE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,CAAC,GAAG,KAAKJ,KAAL,CAAWK,MAAX,CAAkBC,OAAlB,EAAJ,EAAiCC,GAAjC,CAAsCC,KAAD,IAAW;AAC9C,aACE,oBAAC,OAAD;AACE,QAAA,OAAO,EAAEA,KAAK,CAAC,CAAD,CAAL,CAASC,OADpB;AAEE,QAAA,GAAG,EAAED,KAAK,CAAC,CAAD,CAAL,CAASE,EAFhB;AAGE,QAAA,UAAU,EAAE,MAAM,KAAKV,KAAL,CAAWN,gBAAX,CAA4Bc,KAAK,CAAC,CAAD,CAAL,CAASE,EAArC,EAAyCF,KAAK,CAAC,CAAD,CAAL,CAASG,IAAlD,CAHpB;AAIE,QAAA,QAAQ,EAAE,MAAM,KAAKX,KAAL,CAAWP,UAAX,CAAsBe,KAAK,CAAC,CAAD,CAAL,CAASE,EAA/B,CAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KARD,CAFJ,CATF,CADF;AAyBD;;AAECP,EAAAA,UAAU,CAACD,CAAD,EAAI;AACZA,IAAAA,CAAC,CAACU,cAAF;AACA,SAAKZ,KAAL,CAAWR,OAAX,CAAmBU,CAAC,CAACW,aAAF,CAAgBC,QAAhB,CAAyBC,IAAzB,CAA8BC,KAAjD;AACD;;AArCkC;;AAyCrC,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLb,IAAAA,MAAM,EAAEa,KAAK,CAACC,UAAN,CAAiBd,MADpB;AAELD,IAAAA,KAAK,EAAEc,KAAK,CAACC,UAAN,CAAiBf;AAFnB,GAAP;AAID;;AAED,SAASgB,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACL9B,IAAAA,OAAO,EAAE,MAAM;AACb8B,MAAAA,QAAQ,CAACC,SAAS,EAAV,CAAR;AACD,KAHI;AAKL9B,IAAAA,OAAO,EAAGmB,IAAD,IAAU;AACjBU,MAAAA,QAAQ,CAACE,YAAY,CAACZ,IAAD,CAAb,CAAR;AACD,KAPI;AASLlB,IAAAA,UAAU,EAAGiB,EAAD,IAAQ;AAClBW,MAAAA,QAAQ,CAACG,eAAe,CAACd,EAAD,CAAhB,CAAR;AACD,KAXI;AAaLhB,IAAAA,gBAAgB,EAAE,CAACgB,EAAD,EAAKC,IAAL,KAAc;AAC9BU,MAAAA,QAAQ,CAAC3B,gBAAgB,CAACgB,EAAD,EAAKC,IAAL,CAAjB,CAAR;AACD,KAfI;AAiBLhB,IAAAA,SAAS,EAAGS,KAAD,IAAW;AACpBiB,MAAAA,QAAQ,CAAC1B,SAAS,CAACS,KAAD,CAAV,CAAR;AACD;AAnBI,GAAP;AAqBD;;AAED,MAAMmB,YAAY,GAAGZ,IAAI,IAAI;AAC3B,SAAOU,QAAQ,IAAI;AACjB/B,IAAAA,KAAK,CACFmC,IADH,CACQ,YADR,EACsB;AAAEd,MAAAA;AAAF,KADtB,EAEKe,IAFL,CAEUC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,OAA1B;AACAV,MAAAA,QAAQ,CAAC7B,OAAO,CAACmC,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsBC,GAAvB,EAA4BL,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsBpB,IAAlD,CAAR,CAAR;AACD,KALL;AAMD,GAPD;AAQD,CATD;;AAWA,MAAMa,eAAe,GAAGd,EAAE,IAAI;AAC5B,SAAOW,QAAQ,IAAI;AACjB/B,IAAAA,KAAK,CACF2C,MADH,CACU,gBAAgBvB,EAD1B,EAEKgB,IAFL,CAEUC,QAAQ,IAAI;AAChBN,MAAAA,QAAQ,CAAC5B,UAAU,CAACiB,EAAD,CAAX,CAAR;AACD,KAJL,EAKKwB,KALL,CAKW9B,KAAK,IAAI;AACdT,MAAAA,SAAS,CAAC,oBAAD,CAAT;AACD,KAPL;AAQD,GATD;AAUD,CAXD;;AAaA,MAAM2B,SAAS,GAAG,MAAM;AACtB,SAAOD,QAAQ,IAAI;AACjB/B,IAAAA,KAAK,CACF6C,GADH,CACO,YADP,EAEKT,IAFL,CAEUC,QAAQ,IAAI;AAChB,YAAMtB,MAAM,GAAGsB,QAAQ,CAACG,IAAT,CAAcvB,GAAd,CAAkBQ,IAAI,KAAK;AAAEL,QAAAA,EAAE,EAAEK,IAAI,CAACiB,GAAX;AAAgBrB,QAAAA,IAAI,EAAEI,IAAI,CAACJ;AAA3B,OAAL,CAAtB,CAAf;AACAU,MAAAA,QAAQ,CAAC9B,OAAO,CAACc,MAAD,CAAR,CAAR;AACD,KALL,EAMK6B,KANL,CAMW9B,KAAK,IAAI;AACdT,MAAAA,SAAS,CAACS,KAAD,CAAT;AACD,KARL;AASD,GAVD;AAWD,CAZD;;AAcA,eAAehB,OAAO,CAAC6B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CvB,MAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Weather from '../Weather/Weather';\r\nimport axios from 'axios';\r\nimport { getCity, addCity, deleteCity, getWeatherByCity, someError } from '../../actions/сitiesAction';\r\nimport getCitiesFromStorage from '../../index';\r\nimport './Cities.css';\r\n\r\nclass Cities extends React.Component {\r\n\r\ncomponentDidMount(){\r\n  this.props.getCity();\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div className=\"fav_cities\">Избранное</div>\r\n        <form onSubmit={(e) => this.addNewCity(e)}>\r\n          <input className=\"city_input\" type=\"text\" name=\"city\" required />\r\n          <input className=\"city_button\" type=\"submit\" value=\"Добавить\"/>\r\n        </form>\r\n      </div >\r\n      {this.props.error && <div className=\"error\">Error: {this.props.error}</div>}\r\n      <div  className=\"weather\">\r\n        {\r\n          [...this.props.cities.entries()].map((entry) => {\r\n            return (\r\n              <Weather\r\n                weather={entry[1].weather}\r\n                key={entry[1].id}\r\n                getWeather={() => this.props.getWeatherByCity(entry[1].id, entry[1].name)}\r\n                onDelete={() => this.props.deleteCity(entry[1].id)} />\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n  addNewCity(e) {\r\n    e.preventDefault();\r\n    this.props.addCity(e.currentTarget.elements.city.value);\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    cities: state.fav_cities.cities,\r\n    error: state.fav_cities.error\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getCity: () => {\r\n      dispatch(getCities());\r\n    },\r\n\r\n    addCity: (name) => {\r\n      dispatch(addCityStore(name));\r\n    },\r\n\r\n    deleteCity: (id) => {\r\n      dispatch(deleteCityStore(id));\r\n    },\r\n\r\n    getWeatherByCity: (id, name) => {\r\n      dispatch(getWeatherByCity(id, name));\r\n    },\r\n\r\n    someError: (error) => {\r\n      dispatch(someError(error));\r\n    }\r\n  };\r\n}\r\n\r\nconst addCityStore = name => {\r\n  return dispatch => {\r\n    axios\r\n      .post('favourites', { name })\r\n        .then(response => {\r\n          console.log(response.data.newCity);\r\n          dispatch(addCity(response.data.newCity._id, response.data.newCity.name));\r\n        });\r\n  };\r\n};\r\n\r\nconst deleteCityStore = id => {\r\n  return dispatch => {\r\n    axios\r\n      .delete('favourites/' + id)\r\n        .then(response => {\r\n          dispatch(deleteCity(id))\r\n        })\r\n        .catch(error => {\r\n          someError(\"Cannot delete city\");\r\n        })\r\n  }\r\n}\r\n\r\nconst getCities = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get('favourites')\r\n        .then(response => {\r\n          const cities = response.data.map(city => ({ id: city._id, name: city.name }));\r\n          dispatch(getCity(cities));\r\n        })\r\n        .catch(error => {\r\n          someError(error);\r\n        });\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities);\r\n"]},"metadata":{},"sourceType":"module"}