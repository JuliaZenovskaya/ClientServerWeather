{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Web\\\\sem2\\\\weather\\\\src\\\\components\\\\Cities\\\\Cities.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Weather from '../Weather/Weather';\nimport { addCity, deleteCity } from '../../actions/сitiesAction';\nimport { getWeatherByCity } from '../../fetch/getWeatherByCity';\n\nclass AddedCities extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"\\u0418\\u0437\\u0431\\u0440\\u0430\\u043D\\u043E\\u0435\"), React.createElement(\"form\", {\n      onSubmit: e => this.addNewCity(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"cityName\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }))), this.props.error && React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Error: \", this.props.error), React.createElement(\"div\", {\n      className: \"forecasts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, [...this.props.favorites.entries()].map(entry => {\n      return React.createElement(Weather, {\n        key: entry[0],\n        getWeather: () => this.props.getWeatherByCity(entry[0]),\n        onDelete: () => this.props.deleteCity(entry[0]),\n        weather: entry[1].response,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n    })));\n  }\n\n  addNewCity(e) {\n    e.preventDefault();\n    this.props.addCity(e.currentTarget.elements.cityName.value);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    favorites: state.fav.favorites,\n    error: state.fav.error\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addCity: cityName => {\n      dispatch(addCity(cityName));\n    },\n    deleteCity: cityName => {\n      dispatch(deleteCity(cityName));\n    },\n    getWeatherByCity: cityName => {\n      dispatch(getWeatherByCity(cityName));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddedCities);","map":{"version":3,"sources":["D:/Study/Web/sem2/weather/src/components/Cities/Cities.js"],"names":["React","connect","Weather","addCity","deleteCity","getWeatherByCity","AddedCities","Component","render","e","addNewCity","props","error","favorites","entries","map","entry","response","preventDefault","currentTarget","elements","cityName","value","mapStateToProps","state","fav","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Weather from '../Weather/Weather';\r\nimport { addCity, deleteCity } from '../../actions/сitiesAction';\r\nimport { getWeatherByCity } from '../../fetch/getWeatherByCity';\r\n\r\n\r\nclass AddedCities extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n      <div>\r\n        <div>Избраное</div>\r\n        <form onSubmit={(e) => this.addNewCity(e)}>\r\n          <input type=\"text\" name=\"cityName\" required />\r\n          <input type=\"submit\" value=\"Добавить\"/>\r\n        </form>\r\n      </div>\r\n        {this.props.error && <div className=\"error\">Error: {this.props.error}</div>}\r\n        <div className=\"forecasts\">\r\n          {\r\n            [...this.props.favorites.entries()].map((entry) => {\r\n              return (\r\n                <Weather\r\n                  key={entry[0]}\r\n                  getWeather={() => this.props.getWeatherByCity(entry[0])}\r\n                  onDelete={() => this.props.deleteCity(entry[0])}\r\n                  weather={entry[1].response}/>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  addNewCity(e) {\r\n    e.preventDefault();\r\n    this.props.addCity(e.currentTarget.elements.cityName.value);\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    favorites: state.fav.favorites,\r\n    error: state.fav.error\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addCity: (cityName) => {\r\n      dispatch(addCity(cityName));\r\n    },\r\n\r\n    deleteCity: (cityName) => {\r\n      dispatch(deleteCity(cityName));\r\n    },\r\n\r\n    getWeatherByCity: (cityName) => {\r\n      dispatch(getWeatherByCity(cityName));\r\n    }\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddedCities);\r\n"]},"metadata":{},"sourceType":"module"}