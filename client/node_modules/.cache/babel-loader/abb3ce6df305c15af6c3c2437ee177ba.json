{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Jully\\\\ClientServerWeather\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport getCitiesFromStore from \"../index\";\nexport default function citiesReducer(currentState = {\n  cities: getCitiesFromStorage()\n}, action) {\n  let state = _objectSpread({}, currentState, {\n    error: false,\n    cities: new Map(currentState.cities)\n  });\n\n  console.log(getCitiesFromStore());\n\n  switch (action.type) {\n    case 'ADD_CITY':\n      if (!state.cities.has(action.payload)) state.cities.set(action.payload);\n      break;\n\n    case 'DELETE_CITY':\n      state.cities.delete(action.payload);\n      break;\n\n    case 'FETCH_ADDED_CITY_SUCCESS':\n      state.cities.delete(action.payload.city);\n      state.cities.set(action.payload.response.name, action.payload.response);\n      break;\n\n    case 'FETCH_ADDED_CITY_ERROR':\n      state.error = action.payload.error;\n      state.cities.delete(action.payload.city);\n      break;\n\n    default:\n      break;\n  }\n\n  return state;\n}","map":{"version":3,"sources":["C:/Users/Jully/ClientServerWeather/client/src/reducers/сitiesReducer.js"],"names":["getCitiesFromStore","citiesReducer","currentState","cities","getCitiesFromStorage","action","state","error","Map","console","log","type","has","payload","set","delete","city","response","name"],"mappings":";;;;;;AAAA,OAAOA,kBAAP,MAA+B,UAA/B;AAEA,eAAe,SAASC,aAAT,CAAuBC,YAAY,GAAG;AAACC,EAAAA,MAAM,EAAEC,oBAAoB;AAA7B,CAAtC,EAAwEC,MAAxE,EAAgF;AAG7F,MAAIC,KAAK,qBACJJ,YADI;AAEPK,IAAAA,KAAK,EAAE,KAFA;AAGPJ,IAAAA,MAAM,EAAE,IAAIK,GAAJ,CAAQN,YAAY,CAACC,MAArB;AAHD,IAAT;;AAMFM,EAAAA,OAAO,CAACC,GAAR,CAAYV,kBAAkB,EAA9B;;AAEE,UAAQK,MAAM,CAACM,IAAf;AACE,SAAK,UAAL;AACE,UAAI,CAACL,KAAK,CAACH,MAAN,CAAaS,GAAb,CAAiBP,MAAM,CAACQ,OAAxB,CAAL,EACEP,KAAK,CAACH,MAAN,CAAaW,GAAb,CAAiBT,MAAM,CAACQ,OAAxB;AACF;;AACF,SAAK,aAAL;AACEP,MAAAA,KAAK,CAACH,MAAN,CAAaY,MAAb,CAAoBV,MAAM,CAACQ,OAA3B;AACA;;AACF,SAAK,0BAAL;AACEP,MAAAA,KAAK,CAACH,MAAN,CAAaY,MAAb,CAAoBV,MAAM,CAACQ,OAAP,CAAeG,IAAnC;AACAV,MAAAA,KAAK,CAACH,MAAN,CAAaW,GAAb,CAAiBT,MAAM,CAACQ,OAAP,CAAeI,QAAf,CAAwBC,IAAzC,EAA+Cb,MAAM,CAACQ,OAAP,CAAeI,QAA9D;AACA;;AACF,SAAK,wBAAL;AACEX,MAAAA,KAAK,CAACC,KAAN,GAAcF,MAAM,CAACQ,OAAP,CAAeN,KAA7B;AACAD,MAAAA,KAAK,CAACH,MAAN,CAAaY,MAAb,CAAoBV,MAAM,CAACQ,OAAP,CAAeG,IAAnC;AACA;;AACF;AACE;AAjBJ;;AAmBA,SAAOV,KAAP;AACD","sourcesContent":["import getCitiesFromStore from \"../index\";\r\n\r\nexport default function citiesReducer(currentState = {cities: getCitiesFromStorage()}, action) {\r\n\r\n\r\n  let state = {\r\n    ...currentState,\r\n    error: false,\r\n    cities: new Map(currentState.cities)\r\n  };\r\n\r\nconsole.log(getCitiesFromStore());\r\n\r\n  switch (action.type) {\r\n    case 'ADD_CITY':\r\n      if (!state.cities.has(action.payload))\r\n        state.cities.set(action.payload);\r\n      break;\r\n    case 'DELETE_CITY':\r\n      state.cities.delete(action.payload);\r\n      break;\r\n    case 'FETCH_ADDED_CITY_SUCCESS':\r\n      state.cities.delete(action.payload.city);\r\n      state.cities.set(action.payload.response.name, action.payload.response);\r\n      break;\r\n    case 'FETCH_ADDED_CITY_ERROR':\r\n      state.error = action.payload.error;\r\n      state.cities.delete(action.payload.city);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}