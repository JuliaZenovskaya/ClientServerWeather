{"ast":null,"code":"export function addCity(name) {\n  return {\n    type: 'ADD_CITY',\n    payload: name\n  };\n}\nexport function deleteCity(id) {\n  return {\n    type: 'DELETE_CITY',\n    payload: id\n  };\n}\nexport function fetchAddedCitiesSuccess(response, city) {\n  return {\n    type: 'FETCH_ADDED_CITY_SUCCESS',\n    payload: {\n      response,\n      city\n    }\n  };\n}\nexport function fetchAddedCitiesError(error, city) {\n  return {\n    type: 'FETCH_ADDED_CITY_ERROR',\n    payload: {\n      error,\n      city\n    }\n  };\n}\nexport function getWeatherByCity(city) {\n  return function (dispatch) {\n    fetch(\"weather?city=\".concat(city)).then(response => {\n      response.json().then(json => {\n        if (response.ok) {\n          dispatch(fetchAddedCitiesSuccess(json, city));\n        } else {\n          let error = json.message;\n          dispatch(fetchAddedCitiesError(error, city));\n        }\n      });\n    }, error => dispatch(fetchAddedCitiesError(error, city)));\n  };\n}","map":{"version":3,"sources":["C:/Users/Jully/ClientServerWeather/client/src/actions/сitiesAction.js"],"names":["addCity","name","type","payload","deleteCity","id","fetchAddedCitiesSuccess","response","city","fetchAddedCitiesError","error","getWeatherByCity","dispatch","fetch","then","json","ok","message"],"mappings":"AAEA,OAAO,SAASA,OAAT,CAAiBC,IAAjB,EAAuB;AAC5B,SAAO;AACLC,IAAAA,IAAI,EAAE,UADD;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID;AAED,OAAO,SAASG,UAAT,CAAoBC,EAApB,EAAwB;AAC7B,SAAO;AACLH,IAAAA,IAAI,EAAE,aADD;AAELC,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID;AAED,OAAO,SAASC,uBAAT,CAAiCC,QAAjC,EAA2CC,IAA3C,EAAiD;AACtD,SAAO;AACLN,IAAAA,IAAI,EAAE,0BADD;AAELC,IAAAA,OAAO,EAAE;AACPI,MAAAA,QADO;AAEPC,MAAAA;AAFO;AAFJ,GAAP;AAOD;AAED,OAAO,SAASC,qBAAT,CAA+BC,KAA/B,EAAsCF,IAAtC,EAA4C;AACjD,SAAO;AACLN,IAAAA,IAAI,EAAE,wBADD;AAELC,IAAAA,OAAO,EAAE;AACPO,MAAAA,KADO;AAEPF,MAAAA;AAFO;AAFJ,GAAP;AAOD;AAED,OAAO,SAASG,gBAAT,CAA0BH,IAA1B,EAAgC;AACtC,SAAO,UAASI,QAAT,EAAmB;AACvBC,IAAAA,KAAK,wBAAiBL,IAAjB,EAAL,CACGM,IADH,CACQP,QAAQ,IAAI;AAChBA,MAAAA,QAAQ,CAACQ,IAAT,GACGD,IADH,CACQC,IAAI,IAAI;AACZ,YAAIR,QAAQ,CAACS,EAAb,EAAiB;AACfJ,UAAAA,QAAQ,CAACN,uBAAuB,CAACS,IAAD,EAAOP,IAAP,CAAxB,CAAR;AACD,SAFD,MAEO;AACL,cAAIE,KAAK,GAAGK,IAAI,CAACE,OAAjB;AACAL,UAAAA,QAAQ,CAACH,qBAAqB,CAACC,KAAD,EAAQF,IAAR,CAAtB,CAAR;AACD;AACF,OARH;AASD,KAXH,EAYEE,KAAK,IAAIE,QAAQ,CAACH,qBAAqB,CAACC,KAAD,EAAQF,IAAR,CAAtB,CAZnB;AAaD,GAdF;AAeA","sourcesContent":["\r\n\r\nexport function addCity(name) {\r\n  return {\r\n    type: 'ADD_CITY',\r\n    payload: name\r\n  };\r\n}\r\n\r\nexport function deleteCity(id) {\r\n  return {\r\n    type: 'DELETE_CITY',\r\n    payload: id\r\n  };\r\n}\r\n\r\nexport function fetchAddedCitiesSuccess(response, city) {\r\n  return {\r\n    type: 'FETCH_ADDED_CITY_SUCCESS',\r\n    payload: {\r\n      response,\r\n      city\r\n    }\r\n  }\r\n}\r\n\r\nexport function fetchAddedCitiesError(error, city) {\r\n  return {\r\n    type: 'FETCH_ADDED_CITY_ERROR',\r\n    payload: {\r\n      error,\r\n      city\r\n    }\r\n  }\r\n}\r\n\r\nexport function getWeatherByCity(city) {\r\n return function(dispatch) {\r\n    fetch(`weather?city=${city}`)\r\n      .then(response => {\r\n        response.json()\r\n          .then(json => {\r\n            if (response.ok) {\r\n              dispatch(fetchAddedCitiesSuccess(json, city));\r\n            } else {\r\n              let error = json.message;\r\n              dispatch(fetchAddedCitiesError(error, city));\r\n            }\r\n          });\r\n      },\r\n      error => dispatch(fetchAddedCitiesError(error, city)))\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}