{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Jully\\\\ClientServerWeather\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { getCities } from \"../components/Cities/Cities\";\nexport default function citiesReducer(currentState = {}, action) {\n  console.log(currentState.cities);\n\n  let state = _objectSpread({}, currentState, {\n    error: false\n  });\n\n  switch (action.type) {\n    case 'GET_CITY':\n      state.cities.set(action.payload);\n      break;\n\n    case 'ADD_CITY':\n      if (!state.cities.has(action.payload)) state.cities.set(action.payload);\n      break;\n\n    case 'DELETE_CITY':\n      state.cities.delete(action.payload);\n      break;\n\n    case 'FETCH_ADDED_CITY_SUCCESS':\n      state.cities.delete(action.payload.city);\n      state.cities.set(action.payload.response.name, action.payload.response);\n      break;\n\n    case 'FETCH_ADDED_CITY_ERROR':\n      state.error = action.payload.error;\n      state.cities.delete(action.payload.city);\n      break;\n\n    default:\n      break;\n  }\n\n  return state;\n}","map":{"version":3,"sources":["C:/Users/Jully/ClientServerWeather/client/src/reducers/сitiesReducer.js"],"names":["getCities","citiesReducer","currentState","action","console","log","cities","state","error","type","set","payload","has","delete","city","response","name"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,6BAA1B;AAEA,eAAe,SAASC,aAAT,CAAuBC,YAAY,GAAG,EAAtC,EAA0CC,MAA1C,EAAkD;AAEjEC,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,CAACI,MAAzB;;AAEA,MAAIC,KAAK,qBACJL,YADI;AAEPM,IAAAA,KAAK,EAAE;AAFA,IAAT;;AAKA,UAAQL,MAAM,CAACM,IAAf;AACE,SAAK,UAAL;AACEF,MAAAA,KAAK,CAACD,MAAN,CAAaI,GAAb,CAAiBP,MAAM,CAACQ,OAAxB;AACA;;AACF,SAAK,UAAL;AACE,UAAI,CAACJ,KAAK,CAACD,MAAN,CAAaM,GAAb,CAAiBT,MAAM,CAACQ,OAAxB,CAAL,EACEJ,KAAK,CAACD,MAAN,CAAaI,GAAb,CAAiBP,MAAM,CAACQ,OAAxB;AACF;;AACF,SAAK,aAAL;AACEJ,MAAAA,KAAK,CAACD,MAAN,CAAaO,MAAb,CAAoBV,MAAM,CAACQ,OAA3B;AACA;;AACF,SAAK,0BAAL;AACEJ,MAAAA,KAAK,CAACD,MAAN,CAAaO,MAAb,CAAoBV,MAAM,CAACQ,OAAP,CAAeG,IAAnC;AACAP,MAAAA,KAAK,CAACD,MAAN,CAAaI,GAAb,CAAiBP,MAAM,CAACQ,OAAP,CAAeI,QAAf,CAAwBC,IAAzC,EAA+Cb,MAAM,CAACQ,OAAP,CAAeI,QAA9D;AACA;;AACF,SAAK,wBAAL;AACER,MAAAA,KAAK,CAACC,KAAN,GAAcL,MAAM,CAACQ,OAAP,CAAeH,KAA7B;AACAD,MAAAA,KAAK,CAACD,MAAN,CAAaO,MAAb,CAAoBV,MAAM,CAACQ,OAAP,CAAeG,IAAnC;AACA;;AACF;AACE;AApBJ;;AAuBA,SAAOP,KAAP;AACC","sourcesContent":["import { getCities } from \"../components/Cities/Cities\";\r\n\r\nexport default function citiesReducer(currentState = {}, action) {\r\n\r\nconsole.log(currentState.cities);\r\n\r\nlet state = {\r\n  ...currentState,\r\n  error: false\r\n};\r\n\r\nswitch (action.type) {\r\n  case 'GET_CITY':\r\n    state.cities.set(action.payload);\r\n    break;\r\n  case 'ADD_CITY':\r\n    if (!state.cities.has(action.payload))\r\n      state.cities.set(action.payload);\r\n    break;\r\n  case 'DELETE_CITY':\r\n    state.cities.delete(action.payload);\r\n    break;\r\n  case 'FETCH_ADDED_CITY_SUCCESS':\r\n    state.cities.delete(action.payload.city);\r\n    state.cities.set(action.payload.response.name, action.payload.response);\r\n    break;\r\n  case 'FETCH_ADDED_CITY_ERROR':\r\n    state.error = action.payload.error;\r\n    state.cities.delete(action.payload.city);\r\n    break;\r\n  default:\r\n    break;\r\n}\r\n\r\nreturn state;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}