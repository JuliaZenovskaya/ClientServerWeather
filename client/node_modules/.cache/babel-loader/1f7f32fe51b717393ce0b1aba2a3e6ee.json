{"ast":null,"code":"import { fetchGeolocationSuccess, fetchGeolocationError } from './geolocationAction';\nexport function fetchWeatherByCoords(coords) {\n  return function (dispatch) {\n    fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\".concat(coords.lat, \"&lon=\").concat(coords.lon, \"&appid=7825ce4ffa896c5019e53087c858568a&units=metric&lang=en\")).then(response => {\n      response.json().then(json => {\n        if (response.ok) {\n          dispatch(fetchGeolocationSuccess(json));\n        } else {\n          let error = json.message;\n          dispatch(fetchGeolocationError(error));\n        }\n      });\n    }, error => dispatch(fetchGeolocationError(error)));\n  };\n}","map":{"version":3,"sources":["D:/Study/Web/sem2/weather/src/actions/fetchWeatherByCoords.js"],"names":["fetchGeolocationSuccess","fetchGeolocationError","fetchWeatherByCoords","coords","dispatch","fetch","lat","lon","then","response","json","ok","error","message"],"mappings":"AAAA,SAASA,uBAAT,EAAkCC,qBAAlC,QAA+D,qBAA/D;AAEA,OAAO,SAASC,oBAAT,CAA8BC,MAA9B,EAAsC;AAC5C,SAAO,UAASC,QAAT,EAAmB;AACvBC,IAAAA,KAAK,+DAAwDF,MAAM,CAACG,GAA/D,kBAA0EH,MAAM,CAACI,GAAjF,kEAAL,CACGC,IADH,CACQC,QAAQ,IAAI;AAChBA,MAAAA,QAAQ,CAACC,IAAT,GACGF,IADH,CACQE,IAAI,IAAI;AACZ,YAAID,QAAQ,CAACE,EAAb,EAAiB;AACfP,UAAAA,QAAQ,CAACJ,uBAAuB,CAACU,IAAD,CAAxB,CAAR;AACD,SAFD,MAEO;AACL,cAAIE,KAAK,GAAGF,IAAI,CAACG,OAAjB;AACAT,UAAAA,QAAQ,CAACH,qBAAqB,CAACW,KAAD,CAAtB,CAAR;AACD;AACF,OARH;AASD,KAXH,EAYEA,KAAK,IAAIR,QAAQ,CAACH,qBAAqB,CAACW,KAAD,CAAtB,CAZnB;AAaD,GAdF;AAeA","sourcesContent":["import { fetchGeolocationSuccess, fetchGeolocationError } from './geolocationAction';\r\n\r\nexport function fetchWeatherByCoords(coords) {\r\n return function(dispatch) {\r\n    fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${coords.lat}&lon=${coords.lon}&appid=7825ce4ffa896c5019e53087c858568a&units=metric&lang=en`)\r\n      .then(response => {\r\n        response.json()\r\n          .then(json => {\r\n            if (response.ok) {\r\n              dispatch(fetchGeolocationSuccess(json));\r\n            } else {\r\n              let error = json.message;\r\n              dispatch(fetchGeolocationError(error));\r\n            }\r\n          });\r\n      },\r\n      error => dispatch(fetchGeolocationError(error)))\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}